*       *********************************************************
*       *                                                         
*       * 01/05/1997            REFFER.SPR               16:05:51 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 1997 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


*       *********************************************************
*       *                                                         
*       *          REFFER/Windows Setup Code - SECTION 1          
*       *                                                         
*       *********************************************************
*

#REGION 1
PRIVATE wzfields,wztalk
IF SET("TALK") = "ON"
	SET TALK OFF
	m.wztalk = "ON"
ELSE
	m.wztalk = "OFF"
ENDIF
m.wzfields=SET('FIELDS')
SET FIELDS OFF
IF m.wztalk = "ON"
	SET TALK ON
ENDIF



#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

m.currarea = SELECT()


*       *********************************************************
*       *                                                         
*       *     S7951092/Windows Databases, Indexes, Relations      
*       *                                                         
*       *********************************************************
*

IF USED("reffer")
	SELECT reffer
	SET ORDER TO TAG "ref_no"
ELSE
	SELECT 0
	USE (LOCFILE("reffer.dbf","DBF","Where is reffer?"));
		AGAIN ALIAS reffer ;
		ORDER TAG "ref_no"
ENDIF


*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("_rh00yi3cu")
	DEFINE WINDOW _rh00yi3cu ;
		AT  0.000, 0.000  ;
		SIZE 12.231,83.667 ;
		TITLE "Refferals" ;
		FONT "MS Sans Serif", 8 ;
		STYLE "B" ;
		FLOAT ;
		CLOSE ;
		MINIMIZE ;
		color scheme 10
*		COLOR RGB(,,,192,192,192)
	MOVE WINDOW _rh00yi3cu CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *          REFFER/Windows Setup Code - SECTION 2          
*       *                                                         
*       *********************************************************
*

#REGION 1

#DEFINE C_DBFEMPTY		'Database is empty, add a record?'
#DEFINE C_EDITS			'Please finish your edits.'
#DEFINE C_TOPFILE		'Top of file.'
#DEFINE C_ENDFILE		'End of file.'
#DEFINE C_BRTITLE		'Locate Record'
#DEFINE C_NOLOCK		'Sorry, could not lock record -- try again later.'
#DEFINE C_ECANCEL		'Edits Canceled.'
#DEFINE C_DELREC		'Delete selected record?'
#DEFINE C_NOFEAT		'Feature not available yet.'
#DEFINE C_NOWIZ			'Wizard application is not available.'
#DEFINE C_MAKEREPO		'Creating report with Report Wizard.'
#DEFINE C_NOREPO		'Could not create report.'
#DEFINE C_DELNOTE 		'Deleting records...'
#DEFINE C_READONLY 		'Table is read-only. No editing allowed.'
#DEFINE C_NOTABLE 		'No table selected. Open table or run query.'
#DEFINE C_BADEXPR		'Invalid expression.'
#DEFINE C_LOCWIZ		'Locate WIZARD.APP:'
#DEFINE C_MULTITABLE	'You have multiple related tables. Adding records in not allowed.'

MOVE WINDOW '_rh00yi3cu' CENTER
PRIVATE isediting,isadding,wztblarr
PRIVATE wzolddelete,wzolderror,wzoldesc
PRIVATE wzalias, tempcurs,wzlastrec
PRIVATE isreadonly,find_drop,is2table

IF EMPTY(ALIAS())
	WAIT WINDOW C_NOTABLE
	RETURN
ENDIF

m.wztblarr= ''
m.wzalias=SELECT()
m.isediting=.F.
m.isadding=.F.
m.is2table = .F.
m.wzolddelete=SET('DELETE')
SET DELETED ON
m.tempcurs=SYS(2015)  &&used if General field
m.wzlastrec = 1
m.wzolderror=ON('error')
ON ERROR DO wizerrorhandler
wzoldesc=ON('KEY','ESCAPE')
ON KEY LABEL ESCAPE
m.find_drop = IIF(_DOS,0,2)

m.isreadonly=IIF(ISREAD(),.T.,.F.)
IF m.isreadonly
	WAIT WINDOW C_READONLY TIMEOUT 1
ENDIF


IF RECCOUNT()=0 AND !m.isreadonly AND fox_alert(C_DBFEMPTY)
    APPEND BLANK
ENDIF

GOTO TOP
SCATTER MEMVAR MEMO

*       *********************************************************
*       *                                                         
*       *              REFFER/Windows Screen Layout               
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("_rh00yi3cu")
	ACTIVATE WINDOW _rh00yi3cu SAME
ELSE
	ACTIVATE WINDOW _rh00yi3cu NOSHOW
ENDIF
@ 0.385,4.000 SAY "Refferals Database" ;
	FONT "MS Sans Serif", 14 ;
	STYLE "BT"
@ 2.615,0.000 TO 2.615,83.333 ;
	PEN 4, 8 ;
	STYLE "1"
@ 3.615,2.333 SAY "Refferal Number:" ;
	SIZE 1.000,18.222 ;
	FONT "MS Sans Serif", 12 ;
	STYLE "BT" ;
	PICTURE "@J" ;
	COLOR RGB(,,,255,255,255)
@ 4.000,33.000 TO 5.077,38.833 ;
	PATTERN 1 ;
	PEN 1, 8 ;
	COLOR RGB(128,128,128,128,128,128)
@ 3.385,32.667 GET m.ref_no ;
	SIZE 1.000,3.333 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 12 ;
	STYLE "B" ;
	PICTURE "@K 99" ;
	WHEN isediting ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 5.231,2.333 SAY "Refferal Name:" ;
	SIZE 1.000,18.222 ;
	FONT "MS Sans Serif", 12 ;
	STYLE "BT" ;
	PICTURE "@J" ;
	COLOR RGB(,,,255,255,255)
@ 5.846,33.000 TO 6.923,83.333 ;
	PATTERN 1 ;
	PEN 1, 8 ;
	COLOR RGB(128,128,128,128,128,128)
@ 5.231,32.667 GET m.ref_name ;
	SIZE 1.000,33.556 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 12 ;
	STYLE "B" ;
	PICTURE "@K XXXXXXXXXXXXXXXXXXXXXXXXX" ;
	WHEN isediting ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 7.462,0.000 TO 7.462,83.333 ;
	PEN 4, 8 ;
	STYLE "1"
@ 9.231,2.000 GET m.top_btn ;
	PICTURE "@*HN \<Top" ;
	SIZE 1.769,7.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('TOP') ;
	MESSAGE 'Go to first record.'
@ 9.231,10.000 GET m.prev_btn ;
	PICTURE "@*HN \<Prev" ;
	SIZE 1.769,7.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('PREV') ;
	MESSAGE 'Go to previous record.'
@ 9.231,18.000 GET m.next_btn ;
	PICTURE "@*HN \<Next" ;
	SIZE 1.769,7.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('NEXT') ;
	MESSAGE 'Go to next record.'
@ 9.231,26.000 GET m.end_btn ;
	PICTURE "@*HN \<End" ;
	SIZE 1.769,7.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('END') ;
	MESSAGE 'Go to last record.'
@ 9.231,34.000 GET m.loc_btn ;
	PICTURE "@*HN \<Locate" ;
	SIZE 1.769,7.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('LOCATE') ;
	MESSAGE 'Locate a record.'
@ 9.231,42.000 GET m.add_btn ;
	PICTURE "@*HN \<Add" ;
	SIZE 1.769,7.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('ADD') ;
	MESSAGE 'Add a new record.'
@ 9.231,50.000 GET m.edit_btn ;
	PICTURE "@*HN Ed\<it" ;
	SIZE 1.769,7.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('EDIT') ;
	MESSAGE 'Edit current record.'
@ 9.231,58.000 GET m.del_btn ;
	PICTURE "@*HN \<Delete" ;
	SIZE 1.846,7.833,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('DELETE') ;
	MESSAGE 'Delete current record.'
@ 9.231,66.000 GET m.exit_btn ;
	PICTURE "@*HN E\<xit" ;
	SIZE 1.769,7.667,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID btn_val('EXIT') ;
	MESSAGE 'Close screen.'

IF NOT WVISIBLE("_rh00yi3cu")
	ACTIVATE WINDOW _rh00yi3cu
ENDIF


*       *********************************************************
*       *                                                         
*       *    WindowsREAD contains clauses from SCREEN s7951092    
*       *                                                         
*       *********************************************************
*

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC() ;
	NOLOCK

RELEASE WINDOW _rh00yi3cu

*       *********************************************************
*       *                                                         
*       *                Windows Closing Databases                
*       *                                                         
*       *********************************************************
*

IF USED("reffer")
	SELECT reffer
	USE
ENDIF

SELECT (m.currarea)


#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       *               REFFER/Windows Cleanup Code               
*       *                                                         
*       *********************************************************
*

#REGION 1
SET DELETED &wzolddelete
SET FIELDS &wzfields
ON ERROR &wzolderror
ON KEY LABEL ESCAPE &wzoldesc
DO CASE
CASE _DOS AND SET('DISPLAY')='VGA25'
	@24,0 CLEAR TO 24,79
CASE _DOS AND SET('DISPLAY')='VGA50'
	@49,0 CLEAR TO 49,79
CASE _DOS
	@24,0 CLEAR TO 24,79
ENDCASE

****Procedures****


*       *********************************************************
*       *                                                         
*       *   REFFER/Windows Supporting Procedures and Functions    
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE readdeac
  IF isediting
    ACTIVATE WINDOW '_rh00yi3cu'
    WAIT WINDOW C_EDITS NOWAIT
  ENDIF
  IF !WVISIBLE(WOUTPUT())
    CLEAR READ
    RETURN .T.
  ENDIF
RETURN .F.

PROCEDURE readact
  IF !isediting
  	SELECT (m.wzalias)
  	SHOW GETS
  ENDIF
  DO REFRESH
RETURN

PROCEDURE wizerrorhandler
	* This very simple error handler is primarily intended
	* to trap for General field OLE errors which may occur
	* during editing from the MODIFY GENERAL window.
	WAIT WINDOW message()
RETURN


PROCEDURE printrec
	  PRIVATE sOldError,wizfname,saverec,savearea,tmpcurs,tmpstr
	  PRIVATE prnt_btn,p_recs,p_output,pr_out,pr_record
	  STORE 1 TO p_recs,p_output
	  STORE 0 TO prnt_btn
	  STORE RECNO() TO saverec
	  m.sOldError=ON('error')
	  DO pdialog
	  IF m.prnt_btn = 2
	    RETURN
	  ENDIF
	  IF !FILE(ALIAS()+'.FRX')
	  	m.wizfname=SYS(2004)+'WIZARDS\'+'WIZARD.APP'
	  	IF !FILE(m.wizfname)
			ON ERROR *
			m.wizfname=LOCFILE('WIZARD.APP','APP',C_LOCWIZ)
			ON ERROR &sOldError
			IF !'WIZARD.APP'$UPPER(m.wizfname)
      			WAIT WINDOW C_NOWIZ
      			RETURN
			ENDIF
	  	ENDIF
     	WAIT WINDOW C_MAKEREPO NOWAIT
		m.savearea=SELECT()
		m.tmpcurs='_'+LEFT(SYS(3),7)
		CREATE CURSOR (m.tmpcurs) (comment m)
		m.tmpstr = '* LAYOUT = COLUMNAR'+CHR(13)+CHR(10)
		INSERT INTO (m.tmpcurs) VALUES(m.tmpstr)
		SELECT (m.savearea)
	  	DO (m.wizfname) WITH '','WZ_QREPO','NOSCRN/CREATE',ALIAS(),m.tmpcurs
		USE IN (m.tmpcurs)
     	WAIT CLEAR
	  	IF !FILE(ALIAS()+'.FRX')  &&wizard could not create report
     		WAIT WINDOW C_NOREPO
     		RETURN
	  	ENDIF
	  ENDIF
	
  	  m.pr_out=IIF(m.p_output=1,'TO PRINT NOCONSOLE','PREVIEW')
	  m.pr_record=IIF(m.p_recs=1,'NEXT 1','ALL')
  	  REPORT FORM (ALIAS()) &pr_out &pr_record
	  GO m.saverec
RETURN


PROCEDURE BTN_VAL
	PARAMETER m.btnname
	DO CASE
	CASE  m.btnname='TOP'
		GO TOP
		WAIT WINDOW C_TOPFILE NOWAIT
	CASE  m.btnname='PREV'
		IF !BOF()
			SKIP -1
	 	ENDIF
	 	IF BOF()
			WAIT WINDOW C_TOPFILE NOWAIT
			GO TOP
		ENDIF
	CASE  m.btnname='NEXT'
		IF !EOF()
			SKIP 1
		ENDIF
		IF EOF()
			WAIT WINDOW C_ENDFILE NOWAIT
			GO BOTTOM
		ENDIF
	CASE  m.btnname='END'
		GO BOTTOM
		WAIT WINDOW C_ENDFILE NOWAIT
	CASE  m.btnname='LOCATE'
		DO loc_dlog
	CASE  m.btnname='ADD'  AND !isediting &&add record
		isediting=.T.
		isadding=.T.
		=edithand('ADD')
		_curobj=1
		DO refresh
		SHOW GETS
		RETURN
	CASE  m.btnname='EDIT'  AND !isediting &&edit record
		IF EOF() OR BOF()
			WAIT WINDOW C_ENDFILE NOWAIT
			RETURN
		ENDIF
		IF RLOCK()
			isediting=.T.
			_curobj=1
			DO refresh
			RETURN
		ELSE
			WAIT WINDOW C_NOLOCK
		ENDIF
	CASE m.btnname='EDIT'  AND isediting &&save record
		IF isadding
			=edithand('SAVE')
		ELSE
			GATHER MEMVAR MEMO
		ENDIF
		UNLOCK
		isediting=.F.
		isadding=.F.
		DO refresh
	CASE m.btnname='DELETE'  AND isediting 	&&cancel record
		IF isadding
			=edithand('CANCEL')
		ENDIF
		isediting=.F.
		isadding=.F.
		UNLOCK
		WAIT WINDOW C_ECANCEL NOWAIT
		DO refresh
	CASE m.btnname='DELETE'
		IF EOF() OR BOF()
			WAIT WINDOW C_ENDFILE NOWAIT
			RETURN
		ENDIF
		IF fox_alert(C_DELREC)
			DELETE
			IF !EOF() AND DELETED()
				SKIP 1
			ENDIF
			IF EOF()
				WAIT WINDOW C_ENDFILE NOWAIT
				GO BOTTOM
			ENDIF
		ENDIF
	CASE m.btnname='PRINT'
		DO printrec
		RETURN
	CASE m.btnname='EXIT'
		m.bailout=.T.	&&this is needed if used with FoxApp
		CLEAR READ
		RETURN
	ENDCASE
	SCATTER MEMVAR MEMO
	SHOW GETS
RETURN


PROCEDURE REFRESH
  DO CASE
  CASE m.isreadonly AND RECCOUNT()=0
	SHOW GETS DISABLE
	SHOW GET exit_btn ENABLE
  CASE m.isreadonly
	SHOW GET add_btn DISABLE
	SHOW GET del_btn DISABLE
	SHOW GET edit_btn DISABLE
  CASE (RECCOUNT()=0 OR EOF()) AND !m.isediting
	SHOW GETS DISABLE
	SHOW GET add_btn ENABLE
	SHOW GET exit_btn ENABLE
  CASE m.isediting
    SHOW GET find_drop DISABLE
	SHOW GET top_btn DISABLE
	SHOW GET prev_btn DISABLE
	SHOW GET loc_btn DISABLE
	SHOW GET next_btn DISABLE
	SHOW GET end_btn DISABLE
	SHOW GET add_btn DISABLE
	SHOW GET prnt_btn DISABLE
	SHOW GET exit_btn DISABLE
	SHOW GET edit_btn,1 PROMPT "\<Save"
	SHOW GET del_btn,1 PROMPT "\<Cancel"
	ON KEY LABEL ESCAPE DO BTN_VAL WITH 'DELETE'
	RETURN
  OTHERWISE
	SHOW GET edit_btn,1 PROMPT "Ed\<it"
	SHOW GET del_btn,1 PROMPT "\<Delete"
	SHOW GETS ENABLE
  ENDCASE
  IF m.is2table
  	SHOW GET add_btn DISABLE
  ENDIF
  ON KEY LABEL ESCAPE
RETURN


PROCEDURE edithand
	PARAMETER m.paction
	* procedure handles edits
	DO CASE
	CASE m.paction = 'ADD'
		SCATTER MEMVAR MEMO BLANK
	CASE m.paction = 'SAVE'
		INSERT INTO (ALIAS()) FROM MEMVAR
	CASE m.paction = 'CANCEL'
		* nothing here
	ENDCASE
RETURN

PROCEDURE fox_alert
    PARAMETER wzalrtmess
    PRIVATE alrtbtn
    m.alrtbtn=2
	DEFINE WINDOW _qec1ij2t7 AT 0,0 SIZE 8,50 ;
	  FONT "MS Sans Serif",10 STYLE 'B' ;
	  FLOAT NOCLOSE NOMINIMIZE DOUBLE TITLE WTITLE() color scheme 10
	MOVE WINDOW _qec1ij2t7 CENTER
	ACTIVATE WINDOW _qec1ij2t7 NOSHOW
	@ 2,(50-txtwidth(wzalrtmess))/2 SAY wzalrtmess;
	  FONT "MS Sans Serif", 10 STYLE "B"
	@ 6,18 GET m.alrtbtn ;
	  PICTURE "@*HT \<OK;\?\!\<Cancel" ;
	  SIZE 1.769,8.667,1.333 ;
	  FONT "MS Sans Serif", 8 STYLE "B"
	ACTIVATE WINDOW _qec1ij2t7
	READ CYCLE MODAL
	RELEASE WINDOW _qec1ij2t7
RETURN m.alrtbtn=1


PROCEDURE pdialog
	DEFINE WINDOW _qjn12zbvh ;
		AT  0.000, 0.000  ;
		SIZE 13.231,54.800 ;
		TITLE "Microsoft FoxPro" ;
		FONT "MS Sans Serif", 8 ;
		FLOAT NOCLOSE MINIMIZE SYSTEM
	MOVE WINDOW _qjn12zbvh CENTER
	ACTIVATE WINDOW _qjn12zbvh NOSHOW
	@ 2.846,33.600 SAY "Output:"  ;
		FONT "MS Sans Serif", 8 ;
		STYLE "BT"
	@ 2.846,4.800 SAY "Print:"  ;
		FONT "MS Sans Serif", 8 ;
		STYLE "BT"
	@ 4.692,7.200 GET m.p_recs ;
		PICTURE "@*RVN \<Current Record;\<All Records" ;
		SIZE 1.308,18.500,0.308 ;
		DEFAULT 1 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "BT"
	@ 4.692,36.000 GET m.p_output ;
		PICTURE "@*RVN \<Printer;Pre\<view" ;
		SIZE 1.308,12.000,0.308 ;
		DEFAULT 1 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "BT"
	@ 10.154,16.600 GET m.prnt_btn ;
		PICTURE "@*HT P\<rint;Ca\<ncel" ;
		SIZE 1.769,8.667,0.667 ;
		DEFAULT 1 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "B"
	ACTIVATE WINDOW _qjn12zbvh
	READ CYCLE MODAL
	RELEASE WINDOW _qjn12zbvh
RETURN


PROCEDURE loc_dlog
	PRIVATE gfields,i
	DEFINE WINDOW wzlocate FROM 1,1 TO 20,40;
		SYSTEM GROW CLOSE ZOOM FLOAT FONT "MS Sans Serif",8
	MOVE WINDOW wzlocate CENTER
	m.gfields=SET('FIELDS',2)
	IF !EMPTY(RELATION(1))
		SET FIELDS ON
		IF m.gfields # 'GLOBAL'
			SET FIELDS GLOBAL
		ENDIF
		IF EMPTY(FLDLIST())
			m.i=1
			DO WHILE !EMPTY(OBJVAR(m.i))
				IF ATC('M.',OBJVAR(m.i))=0
					SET FIELDS TO (OBJVAR(m.i))
				ENDIF
				m.i = m.i + 1
			ENDDO
		ENDIF
	ENDIF
	on key label enter keyboard '{ctrl+w}'
	BROWSE WINDOW wzlocate NOEDIT NODELETE ;
		NOMENU TITLE C_BRTITLE color scheme 10
    on key label enter		
	SET FIELDS &gfields
	SET FIELDS OFF
	RELEASE WINDOW wzlocate
RETURN

